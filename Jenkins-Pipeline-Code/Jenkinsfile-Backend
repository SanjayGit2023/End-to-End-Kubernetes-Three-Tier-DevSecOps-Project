pipeline {
    agent any 
    tools {
        nodejs 'nodejs'
    }
    environment  {
        SCANNER_HOME=tool 'sonar-scanner'
        AWS_ACCOUNT_ID = credentials('ACCOUNT_ID')
        AWS_ECR_REPO_NAME = credentials('ECR_REPO2')
        AWS_DEFAULT_REGION = 'us-west-2'
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/"
        GIT_USER_NAME = "SanjayGit2023"
        GIT_REPO_NAME = "End-to-End-Kubernetes-Three-Tier-DevSecOps-Project"
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
                // Additional cleanup if necessary
                sh 'rm -rf Kubernetes-Manifests-file/Backend@tmp'
            }
        }
        // Other stages...
        stage('Update Deployment File') {
            steps {
                dir('Kubernetes-Manifests-file/Backend') {
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email "sanjaychettri54@gmail.com"
                            git config user.name "Sanjay-DevOps"
                            BUILD_NUMBER=${BUILD_NUMBER}
                            echo "Current build number: $BUILD_NUMBER"
                            imageTag=$(grep -oP '(?<=backend:)[^ ]+' deployment.yaml)
                            echo "Current image tag: $imageTag"
                            sed -i "s/${AWS_ECR_REPO_NAME}:${imageTag}/${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}/" deployment.yaml
                            
                            # Check Git status and diff
                            git status
                            git diff

                            # Add, commit, and push changes
                            git add deployment.yaml
                            git commit -m "Update deployment Image to version ${BUILD_NUMBER}" || echo "No changes to commit"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:master
                        '''
                    }
                }
            }
        }
        stage('Verify Git Changes') {
            steps {
                dir('Kubernetes-Manifests-file/Backend') {
                    sh '''
                        echo "Checking git status and logs"
                        git status
                        git log --oneline -n 10
                    '''
                }
            }
        }
    }
}
